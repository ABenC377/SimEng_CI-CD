name: setup gcc
description: installs dependencies and correct gcc version to build and test simeng

inputs:
  OS:
    required: true
  gcc-version:
    required: true
  MODE:
    required: true

runs:
  using: 'composite'
  steps:
    #######################################
    # Install dependencies required (cmake, etc).
    #######################################

    - name: install dependencies
      shell: bash
      run: |
        pip3 install pyparsing
        brew install make

    #######################################
    # Install gcc from source if not in cache.
    #######################################
    - name: install gcc
      shell: bash
      run: |
        brew install gcc@$( echo ${{ inputs.gcc-version }} | cut -d '-' -f 2)

        echo "GCC_DIR=/usr/local/bin/${{ inputs.gcc-version }}" >> $GITHUB_ENV
        echo "CPP_DIR=/usr/local/bin/g++-$( echo ${{ inputs.gcc-version }} | cut -d '-' -f 2)" >> $GITHUB_ENV

    #######################################
    # Build SimEng without external llvm or ninja.
    #######################################
    - name: Build SimEng
      shell: bash
      run: |
        cmake -B build -S . -DCMAKE_BUILD_TYPE=${{ inputs.MODE }} -DSIMENG_ENABLE_TESTS=ON -DSIMENG_OPTIMIZE=ON -DCMAKE_C_COMPILER=${{ env.GCC_DIR }} \
          -DCMAKE_CXX_COMPILER=${{ env.CPP_DIR }}

        cmake --build build -j $(sysctl -n hw.ncpu)

        cmake --build build --target install
