name: PERFORMANCE_REGRESSION

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  LLVM-VERSION: 14
  BENCHMARK_BRANCH: 'make-file-build-system' # The branch inside the benchmark repo that has the script to run all benchmarks.
  PAT: ${{ secrets.SIMENGUOB_PAT }}

on:
  workflow_dispatch:
  pull_request:
  push:

jobs:
  Build_and_Run:
    runs-on: ubuntu-latest
    
    container:
      image: ubuntu:20.04

    steps:
      #######################################
      # Clone SimEng fork
      #######################################
      - name: checkout v4
        uses: actions/checkout@v4
      
      #######################################
      # install compiler and build SimEng
      #######################################
      - name: setup compiler and OS env + build simeng
        uses: ./.github/actions/select_env
        with: 
          LLVM-VERSION: ${{ env.LLVM-VERSION }}
          OS: ubuntu:20.04
          COMPILER: gcc-10

      #######################################
      # Prints out info in isolated step for easy access.
      #######################################
      - name: INFO
        shell: bash
        run: |
          cat /etc/os-release 
          echo "_______________________________________"
          cmake --version
          echo "_______________________________________"
          "${{ env.GCC_DIR }}" --version
          which gcc
          echo "_______________________________________"
          "${{ env.CPP_DIR }}" --version
          which g++
          echo "_______________________________________"

      #######################################
      # Checkout simeng-benchmark repository
      #######################################
      - name: checking out benchmark repository
        uses: actions/checkout@v4
        with:
          repository: UoB-HPC/simeng-benchmarks
          ref: makefile-build-system
          token: ${{ env.PAT }}
          path: simeng-benchmarks

      #######################################
      # Cloverleaf
      #######################################
      - name: check for previous cloverleaf time in cache
        uses: actions/cache/restore@v4
        id: cloverleaf_restore
        with:
          path: ./cloverleaf_benchmark_out.txt
          key: cloverleaf_benchmark_out
      
      - name: run cloverleaf_gcc10.3.0_armv8.4+sve & compare runtimes
        id: cloverleaf_run
        shell: bash
        run: |
          if [[ ${{ steps.cloverleaf_restore.outputs.cache-hit }} == 'true' ]]; then
            previous_time=$(grep 'ticks in' cloverleaf_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')
          else
            previous_time="No Previous Time"
          fi

          simeng ./configs/a64fx.yaml ./simeng-benchmarks/binaries/CloverLeaf/openmp/cloverleaf_gcc10.3.0_armv8.4+sve > cloverleaf_benchmark_out.txt
          
          current_time=$(grep 'ticks in' cloverleaf_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')

          echo "CLOVERLEAF_CURRENT_TIME=${current_time}" >> $GITHUB_ENV
          echo "CLOVERLEAF_PREVIOUS_TIME=${previous_time}" >> $GITHUB_ENV

          if [[ ${{ steps.cloverleaf_restore.outputs.cache-hit }} == 'true' ]]; then
            difference=$((current_time-previous_time))
            echo "CLOVERLEAF_DIFFERENCE=${difference#-}" >> $GITHUB_ENV
          else
            echo "CLOVERLEAF_DIFFERENCE=No Previous Time" >> $GITHUB_ENV
          fi

      - name: store benchmark output into cache
        uses: actions/cache/save@v4
        with:
          path: ./cloverleaf_benchmark_out.txt
          key: cloverleaf_benchmark_out

      #######################################
      # miniBUDE
      #######################################
      - name: check for previous minibude time in cache
        uses: actions/cache/restore@v4
        id: miniBUDE_restore
        with:
          path: ./miniBUDE_benchmark_out.txt
          key: minibude_benchmark_out
      
      - name: run minibude_gcc10.3.0_armv8.4+sve & compare runtimes
        id: minibude_run
        shell: bash
        run: |
          if [[ ${{ steps.miniBUDE_restore.outputs.cache-hit }} == 'true' ]]; then
            previous_time=$(grep 'ticks in' miniBUDE_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')
          else
            previous_time="No Previous Time"
          fi

          simeng ./configs/a64fx.yaml ./simeng-benchmarks/binaries/miniBUDE/openmp/minibude_gcc10.3.0_armv8.4+sve > miniBUDE_benchmark_out.txt
          
          current_time=$(grep 'ticks in' miniBUDE_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')

          echo "MINIBUDE_CURRENT_TIME=${current_time}" >> $GITHUB_ENV
          echo "MINIBUDE_PREVIOUS_TIME=${previous_time}" >> $GITHUB_ENV

          if [[ ${{ steps.miniBUDE_restore.outputs.cache-hit }} == 'true' ]]; then
            difference=$((current_time-previous_time))
            echo "MINIBUDE_DIFFERENCE=${difference#-}" >> $GITHUB_ENV
          else
            echo "MINIBUDE_DIFFERENCE=No Previous Time" >> $GITHUB_ENV
          fi

      - name: store benchmark output into cache
        uses: actions/cache/save@v4
        with:
          path: ./miniBUDE_benchmark_out.txt
          key: minibude_benchmark_out

      #######################################
      # STREAM
      #######################################
      - name: check for previous stream time in cache
        uses: actions/cache/restore@v4
        id: stream_restore
        with:
          path: ./stream_benchmark_out.txt
          key: stream_benchmark_out
      
      - name: run stream_gcc10.3.0_armv8.4+sve & compare runtimes
        id: stream_run
        shell: bash
        run: |
          if [[ ${{ steps.stream_restore.outputs.cache-hit }} == 'true' ]]; then
            previous_time=$(grep 'ticks in' stream_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')
          else
            previous_time="No Previous Time"
          fi

          simeng ./configs/a64fx.yaml ./simeng-benchmarks/binaries/STREAM/stream_gcc10.3.0_armv8.4+sve > stream_benchmark_out.txt
          
          current_time=$(grep 'ticks in' stream_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')

          echo "STREAM_CURRENT_TIME=${current_time}" >> $GITHUB_ENV
          echo "STREAM_PREVIOUS_TIME=${previous_time}" >> $GITHUB_ENV

          if [[ ${{ steps.stream_restore.outputs.cache-hit }} == 'true' ]]; then
            difference=$((current_time-previous_time))
            echo "STREAM_DIFFERENCE=${difference#-}" >> $GITHUB_ENV
          else
            echo "STREAM_DIFFERENCE=No Previous Time" >> $GITHUB_ENV
          fi

      - name: store benchmark output into cache
        uses: actions/cache/save@v4
        with:
          path: ./stream_benchmark_out.txt
          key: stream_benchmark_out

      #######################################
      # TeaLeaf
      #######################################
      - name: check for previous tealeaf time in cache
        uses: actions/cache/restore@v4
        id: tealeaf_restore
        with:
          path: ./tealeaf_benchmark_out.txt
          key: tealeaf_benchmark_out
      
      - name: run tealeaf_gcc10.3.0_armv8.4+sve & compare runtimes
        id: tealeaf_run
        shell: bash
        run: |
          if [[ ${{ steps.tealeaf_restore.outputs.cache-hit }} == 'true' ]]; then
            previous_time=$(grep 'ticks in' tealeaf_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')
          else
            previous_time="No Previous Time"
          fi

          simeng ./configs/a64fx.yaml ./simeng-benchmarks/binaries/TeaLeaf/3d/tealeaf_gcc10.3.0_armv8.4+sve > tealeaf_benchmark_out.txt
          
          current_time=$(grep 'ticks in' tealeaf_benchmark_out.txt | awk '{print substr($6, 1, length($6)-2)}')

          echo "TEALEAF_CURRENT_TIME=${current_time}" >> $GITHUB_ENV
          echo "TEALEAF_PREVIOUS_TIME=${previous_time}" >> $GITHUB_ENV

          if [[ ${{ steps.tealeaf_restore.outputs.cache-hit }} == 'true' ]]; then
            difference=$((current_time-previous_time))
            echo "TEALEAF_DIFFERENCE=${difference#-}" >> $GITHUB_ENV
          else
            echo "TEALEAF_DIFFERENCE=No Previous Time" >> $GITHUB_ENV
          fi

      - name: delete previous caches if possible
        shell: bash
        run: |
          sudo mkdir -p -m 755 /etc/apt/keyrings \
          && wget -qO- https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
          && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

          apt update && apt install -y gh && apt upgrade -y 
          gh extension install actions/gh-actions-cache

          caches=(
            cloverleaf_benchmark_out
            tealeaf_benchmark_out   
            stream_benchmark_out
            minibude_benchmark_out
          )

          set +e
          echo "Deleting caches..."
          for cache in "${caches[@]}"; do
              gh actions-cache delete $cache
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ env.PAT }}

      - name: store benchmark output into cache
        uses: actions/cache/save@v4
        with:
          path: ./tealeaf_benchmark_out.txt
          key: tealeaf_benchmark_out

      #######################################
      # Summary
      #######################################
      - name: Summary
        shell: bash
        run: |
          echo "#############################################"
          echo "CLOVERLEAF (cloverleaf_gcc10.3.0_armv8.4+sve)"
          echo "Current Time: $CLOVERLEAF_CURRENT_TIME ms"
          echo "Previous Time: $CLOVERLEAF_PREVIOUS_TIME ms"
          echo "Absolute Difference: $CLOVERLEAF_DIFFERENCE ms"
          
          echo "#############################################"
          echo "MINIBUDE (minibude_gcc10.3.0_armv8.4+sve)"
          echo "Current Time: $MINIBUDE_CURRENT_TIME ms"
          echo "Previous Time: $MINIBUDE_PREVIOUS_TIME ms"
          echo "Absolute Difference: $MINIBUDE_DIFFERENCE ms"

          echo "#############################################"
          echo "STREAM (stream_gcc10.3.0_armv8.4+sve)"
          echo "Current Time: $STREAM_CURRENT_TIME ms"
          echo "Previous Time: $STREAM_PREVIOUS_TIME ms"
          echo "Absolute Difference: $STREAM_DIFFERENCE ms"

          echo "#############################################"
          echo "TEALEAF (tealeaf_gcc10.3.0_armv8.4+sve)"
          echo "Current Time: $TEALEAF_CURRENT_TIME ms"
          echo "Previous Time: $TEALEAF_PREVIOUS_TIME ms"
          echo "Absolute Difference: $TEALEAF_DIFFERENCE ms"