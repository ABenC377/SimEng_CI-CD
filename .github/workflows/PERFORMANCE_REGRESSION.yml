name: PERFORMANCE_REGRESSION

on:
  workflow_call:
    inputs:
        RUNS:
          default: 10
          required: true
          type: number


env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  BENCHMARK_BRANCH: 'make-file-build-system' # The branch inside the benchmark repo that has the script to run all benchmarks.
  PAT: ${{ secrets.SIMENGUOB_PAT }}

  # averages
  CLOVERLEAF_AVG: 42396.21
  MINIBUDE_AVG: 19414.35
  STREAM_AVG:  7378.78
  TEALEAF_AVG: 55.67

  # benchmark information
  CLOVERLEAF_PATH: "simeng-benchmarks/binaries/CloverLeaf/openmp"
  CLOVERLEAF_NAME:  "cloverleaf_gcc10.3.0_armv8.4+sve"
  CLOVERLEAF_DATAFILE: "simeng-benchmarks/Data_Files/CloverLeaf"

  MINIBUDE_PATH: "simeng-benchmarks/binaries/miniBUDE/openmp"
  MINIBUDE_NAME: "minibude_gcc10.3.0_armv8.4+sve"
  MINIBUDE_DATAFILE: "simeng-benchmarks/Data_Files/miniBUDE/bm1"

  STREAM_PATH: "simeng-benchmarks/binaries/STREAM"
  STREAM_NAME: "stream_gcc10.3.0_armv8.4+sve"
  STREAM_DATAFILE: ""

  TEALEAF_PATH: "simeng-benchmarks/binaries/TeaLeaf/3d"
  TEALEAF_NAME: "tealeaf_gcc10.3.0_armv8.4+sve"
  TEALEAF_DATAFILE: "simeng-benchmarks/Data_Files/TeaLeaf/3d"

  RUNS: ${{ inputs.RUNS }}



jobs:
  Compare_Performances:
    runs-on: ubuntu-latest

    steps:
      #######################################
      # Clone SimEng fork
      #######################################
      - name: checkout v4
        uses: actions/checkout@v4
      
      - name: install deps
        shell: bash
        run: |
          sudo apt-get -y install bc
          sudo apt-get -y install gcc-10 g++-10 pip
      #######################################
      # Build SimEng without llvm or ninja
      #######################################
      - name: Build SimEng
        shell: bash
        run: |
          pip install pyparsing
          sudo cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DSIMENG_ENABLE_TESTS=ON -DSIMENG_OPTIMIZE=ON -DCMAKE_C_COMPILER=/usr/bin/gcc-10 -DCMAKE_CXX_COMPILER=/usr/bin/g++-10

          sudo cmake --build build -j $(nproc)

          sudo cmake --build build --target install

          echo "GCC_DIR=/usr/bin/gcc-10" >> $GITHUB_ENV
          echo "CPP_DIR=/usr/bin/g++-10" >> $GITHUB_ENV

      #######################################
      # Prints out info in isolated step for easy access.
      #######################################
      - name: INFO
        shell: bash
        run: |
          cat /etc/os-release 
          echo "_______________________________________"
          cmake --version
          echo "_______________________________________"
          "${{ env.GCC_DIR }}" --version
          which gcc
          echo "_______________________________________"
          "${{ env.CPP_DIR }}" --version
          which g++
          echo "_______________________________________"
          ls

      #######################################
      # Checkout simeng-benchmark repository
      #######################################
      - name: checking out benchmark repository
        uses: actions/checkout@v4
        with:
          repository: UoB-HPC/simeng-benchmarks
          ref: makefile-build-system
          token: ${{ env.PAT }}
          path: simeng-benchmarks

      #######################################
      # Cloverleaf
      #######################################
      - name: Average ${{ inputs.RUNS }} runs of cloverleaf benchmark
        uses: ./.github/actions/average_single_benchmark
        with:
          path: ${{ env.CLOVERLEAF_PATH}}
          name: ${{ env.CLOVERLEAF_NAME }}
          datafile_path: ${{ env.CLOVERLEAF_DATAFILE }}
          runs: ${{ env.RUNS }}

      #######################################
      # miniBUDE
      #######################################
      - name: Average ${{ inputs.RUNS }} runs of miniBUDE benchmark
        uses: ./.github/actions/average_single_benchmark
        with:
          path: ${{ env.MINIBUDE_PATH }}
          name: ${{ env.MINIBUDE_NAME }}
          datafile_path: ${{ env.MINIBUDE_DATAFILE }}
          runs: ${{ env.runs }}
      #######################################
      # STREAM
      #######################################
      - name: Average ${{ inputs.RUNS }} runs of stream benchmark
        uses: ./.github/actions/average_single_benchmark
        with:
          path: ${{ env.STREAM_PATH }}
          name: ${{ env.STREAM_NAME }}
          datafile_path: ${{ env.STREAM_DATAFILE }}
          runs: ${{ env.runs }}
      #######################################
      # TeaLeaf
      #######################################
      - name: Average ${{ inputs.RUNS }} runs of TeaLeaf benchmark
        uses: ./.github/actions/average_single_benchmark
        with:
          path: ${{ env.TEALEAF_PATH }}
          name: ${{ env.TEALEAF_NAME }}
          datafile_path: ${{ env.TEALEAF_DATAFILE }}
          runs: ${{ env.runs }}
      
      #######################################
      # Compare Results: 5% acceptance rate
      #######################################
      # Should be average 
      - if: ${{ always() }}
        name: Check CLOVERLEAF threshold
        run: |
          CURRENT_AVERAGE=${avg_cloverleaf}

          CLOVERLEAF_THRESHOLD=$(echo "scale=2; ${{ env.CLOVERLEAF_AVG }} * 0.05" | bc)
          CLOVERLEAF_DIFF=$(echo "scale=2; ${CURRENT_AVERAGE} - ${{ env.CLOVERLEAF_AVG }}" | bc)
          CLOVERLEAF_ABS_DIFF=$(echo "if($CLOVERLEAF_DIFF < 0) -1*$CLOVERLEAF_DIFF else $CLOVERLEAF_DIFF" | bc)

          echo "Threshold: +- CLOVERLEAF_THRESHOLD"

          if [ 1 -eq "$(echo "$CLOVERLEAF_ABS_DIFF > $CLOVERLEAF_THRESHOLD" | bc -l)" ]; then
            echo "CLOVERLEAF time difference exceeds 5% threshold!"
            echo "Previous Average: ${{ env.CLOVERLEAF_AVG }} ms"
            exit 1
          else
            echo "CLOVERLEAF runtime is within threshold of 5%!"
          fi
      
      - if: ${{ always() }}
        name: Check MINIBUDE threshold
        run: |
          CURRENT_AVERAGE=${avg_minibude}

          MINIBUDE_THRESHOLD=$(echo "scale=2; ${{ env.MINIBUDE_AVG }} * 0.05" | bc)
          MINIBUDE_DIFF=$(echo "scale=2; ${CURRENT_AVERAGE} - ${{ env.MINIBUDE_AVG }}" | bc)
          MINIBUDE_ABS_DIFF=$(echo "if($MINIBUDE_DIFF < 0) -1*$MINIBUDE_DIFF else $MINIBUDE_DIFF" | bc)

          echo "Threshold: +- MINIBUDE_THRESHOLD"

          if [ 1 -eq "$(echo "$MINIBUDE_ABS_DIFF > $MINIBUDE_THRESHOLD" | bc -l)" ]; then
            echo "MINIBUDE time difference exceeds 5% threshold!"
            echo "Previous Average: ${{ env.MINIBUDE_AVG }} ms"
            exit 1
          else
            echo "MINIBUDE runtime is within threshold of 5%!"
          fi
      
      - if: ${{ always() }}
        name: Check STREAM threshold
        run: |
          CURRENT_AVERAGE=${avg_stream}

          STREAM_THRESHOLD=$(echo "scale=2; ${{ env.STREAM_AVG }} * 0.05" | bc)
          STREAM_DIFF=$(echo "scale=2; ${CURRENT_AVERAGE} - ${{ env.STREAM_AVG }}" | bc)
          STREAM_ABS_DIFF=$(echo "if($STREAM_DIFF < 0) -1*$STREAM_DIFF else $STREAM_DIFF" | bc)

          echo "Threshold: +- STREAM_THRESHOLD"

          if [ 1 -eq "$(echo "$STREAM_ABS_DIFF > $STREAM_THRESHOLD" | bc -l)" ]; then
            echo "STREAM time difference exceeds 5% threshold!"
            echo "Previous Average: ${{ env.STREAM_AVG }} ms"

            exit 1
          else
            echo "STREAM runtime is within threshold of 5%!"
          fi
      
      - if: ${{ always() }}
        name: Check TEALEAF threshold
        run: |
          CURRENT_AVERAGE=${avg_tealeaf}

          TEALEAF_THRESHOLD=$(echo "scale=2; ${{ env.STREAM_AVG }} * 0.05" | bc)

          # TEALEAF_DIFF=$(echo "scale=2; $TEALEAF_CURRENT_TIME - ${{ env.TEALEAF_AVG }}" | bc)

          TEALEAF_DIFF=$(echo "scale=2; ${CURRENT_AVERAGE} - ${{ env.TEALEAF_AVG }}" | bc)
          TEALEAF_ABS_DIFF=$(echo "if($TEALEAF_DIFF < 0) -1*$TEALEAF_DIFF else $TEALEAF_DIFF" | bc)

          echo "Threshold: +- $TEALEAF_THRESHOLD"

          if [ 1 -eq "$(echo "$TEALEAF_ABS_DIFF > $TEALEAF_THRESHOLD" | bc -l)" ]; then
            echo "TEALEAF time difference exceeds 5% threshold!"
            echo "Average of current commit: ${CURRENT_AVERAGE} ms"
            echo "Previous Average: ${{ env.TEALEAF_AVG }} ms"
            exit 1
          else
            echo "TEALEAF runtime is within threshold of 5%!"
          fi

      # #######################################
      # # Summary
      # #######################################
      # - name: Summary
      #   shell: bash
      #   run: |
      #     echo "#############################################"
      #     echo "CLOVERLEAF (cloverleaf_gcc10.3.0_armv8.4+sve)"
      #     echo "Current Time: $CLOVERLEAF_CURRENT_TIME"
      #     echo "Average Time: ${{ env.CLOVERLEAF_AVG }}"
      #     echo "Absolute Difference: $CLOVERLEAF_DIFFERENCE"
          
      #     echo "#############################################"
      #     echo "MINIBUDE (minibude_gcc10.3.0_armv8.4+sve)"
      #     echo "Current Time: $MINIBUDE_CURRENT_TIME"
      #     echo "Average Time: ${{ env.MINIBUDE_AVG }}"
      #     echo "Absolute Difference: $MINIBUDE_DIFFERENCE"

      #     echo "#############################################"
      #     echo "STREAM (stream_gcc10.3.0_armv8.4+sve)"
      #     echo "Current Time: $STREAM_CURRENT_TIME"
      #     echo "Average Time: ${{ env.STREAM_AVG }}"
      #     echo "Absolute Difference: $STREAM_DIFFERENCE"

      #     echo "#############################################"
      #     echo "TEALEAF (tealeaf_gcc10.3.0_armv8.4+sve)"
      #     echo "Current Time: $TEALEAF_CURRENT_TIME"
      #     echo "Average Time: ${{ env.TEALEAF_AVG }}"
      #     echo "Absolute Difference: $TEALEAF_DIFFERENCE"