name: setup armclang
description: installs dependencies and correct armclang version to build and test simeng

inputs:
  OS:
    required: true
  LLVM-VERSION:
    required: true
    
runs:
  using: 'composite'
  steps:

    - name: Download armclang
      run: |
        apt-get update
        apt-get upgrade -y
        apt-get install environment-modules

        wget https://developer.arm.com/-/cdn-downloads/permalink/Arm-Compiler-for-Linux/Version_24.04/arm-compiler-for-linux_24.04_Ubuntu-22.04_aarch64.tar
        tar -xf arm-compiler-for-linux_24.04_Ubuntu-22.04_aarch64.tar

        ./arm-compiler-for-linux_24.04_Ubuntu-20.04/arm-compiler-for-linux_24.04_Ubuntu-20.04.sh --install-to ./arm_compiler_test
        export MODULEPATH=$MODULEPATH:$(pwd)/arm_compiler_test/modulefiles

        module avail
        module load acfl/24.04
        armclang -v
      
    #######################################
    # - name: armclang restore
    #   uses: actions/cache/restore@v4
    #   id: armclang-restore-v4
    #   with: 
    #     path: /usr/local/armclang
    #     key: armclang-${{ inputs.OS }}
    # #######################################
    # - if: ${{ steps.armclang-restore-v4.outputs.cache-hit != 'true' }}
    #   name: Install armclang
    #   shell: bash
    #   run: |
    #     wget https://developer.arm.com/-/cdn-downloads/permalink/Arm-Compiler-for-Linux/Source_Code/gcc-11-sources.tar.xz > /dev/null 2>&1
    #     tar -xf gcc-11-sources.tar.xz.tar.gz > /dev/null 2>&1
    #     cd gcc-11-sources
    #     tree -L 2
    #     ./contrib/download_prerequisites > /dev/null
    #     ./configure --enable-languages=c,c++ -disable-multilib --prefix=/usr/local/armclang
        
    #     make -j$(nproc)
    #     make install
    # #######################################
    # - name: armclang save
    #   uses: actions/cache/save@v4
    #   id: armclang-save-v4
    #   with: 
    #     path: /usr/local/armclang
    #     key: armclang-${{ inputs.OS }}